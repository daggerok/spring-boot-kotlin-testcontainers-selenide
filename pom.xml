<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.5.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <packaging>pom</packaging>
    <modelVersion>4.0.0</modelVersion>
    <name>${project.artifactId}</name>
    <description>Greeting Spring Boot Kotlin micro-services applications</description>
    <artifactId>spring-boot-kotlin-testcontainers-selenide-remote-web-driver</artifactId>
    <groupId>example</groupId>
    <version>0.0.0</version>
    <modules>
        <module>infrastructure/testing-support</module>
        <module>greeting/greeting-api</module>
        <module>greeting/greeting-client</module>
        <module>greeting/greeting-service</module>
        <module>webapp</module>
        <module>infrastructure/nginx-reverse-proxy</module>
        <module>infrastructure/docker-compose</module>
    </modules>
    <developers>
        <developer>
            <name>Maksim Kostromin</name>
            <email>daggerok@gmail.com</email>
            <organization>Maksim Kostromin aka daggerok</organization>
            <organizationUrl>https://gitlab.com/daggerok/</organizationUrl>
        </developer>
    </developers>
    <organization>
        <name>daggerok open source projects</name>
        <url>https://gitlab.com/daggerok/</url>
    </organization>
    <scm>
        <developerConnection>scm:git:git@gitlab.com:daggerok/drugstore.git</developerConnection>
        <connection>scm:git:https://gitlab.com/daggerok/drugstore.git</connection>
        <url>https://gitlab.com/daggerok/drugstore.git</url>
        <tag>HEAD</tag>
    </scm>
    <properties>
        <java.version>1.8</java.version>
        <feign.version>11.6</feign.version>
        <kotlin.version>1.5.21</kotlin.version>
        <selenide.version>5.23.2</selenide.version>
        <logcaptor.version>2.7.0</logcaptor.version>
        <awaitility.version>4.1.0</awaitility.version>
        <testcontainers.version>1.16.0</testcontainers.version>
        <log4j-api-kotlin.version>1.0.0</log4j-api-kotlin.version>
        <spring-cloud-contract-wiremock.version>3.0.3</spring-cloud-contract-wiremock.version>
        <!---->
        <dockerhub-username>daggerok</dockerhub-username>
        <docker-maven-plugin.version>0.36.1</docker-maven-plugin.version>
        <versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
        <docker-compose-maven-plugin.version>4.0.0</docker-compose-maven-plugin.version>
        <!---->
        <rest-assured.version>4.2.0</rest-assured.version>
        <jruby-complete.version>9.2.19.0</jruby-complete.version>
        <asciidoctorj-pdf.version>1.6.0</asciidoctorj-pdf.version>
        <asciidoctorj-diagram.version>2.1.2</asciidoctorj-diagram.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
        <selenium-remote-driver.version>3.141.59</selenium-remote-driver.version>
        <asciidoctor-maven-plugin.version>2.1.0</asciidoctor-maven-plugin.version>
        <asciidoctor.outputs>${project.build.directory}/docs</asciidoctor.outputs>
        <rest-assured-kotlin-extensions.version>4.2.0</rest-assured-kotlin-extensions.version>
        <spring-restdocs-asciidoctor.version>2.0.5.RELEASE</spring-restdocs-asciidoctor.version>
        <!--<rest-assured-kotlin-extensions.version>4.4.0</rest-assured-kotlin-extensions.version>-->
        <!---->
        <encoding>UTF-8</encoding>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>example.infrastructure</groupId>
                <artifactId>testing-support</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <!---->
            <dependency>
                <groupId>example.greeting.api</groupId>
                <artifactId>greeting-api</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>example.greeing.client</groupId>
                <artifactId>greeting-client</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>example.greeing.service</groupId>
                <artifactId>greeting-service</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>example.webapp</groupId>
                <artifactId>webapp</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <!---->
            <dependency>
                <groupId>example.infrastructure</groupId>
                <artifactId>nginx-reverse-proxy</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>example.infrastructure</groupId>
                <artifactId>docker-compose</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
            </dependency>
            <!---->
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-bom</artifactId>
                <version>${feign.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>kotlin-extensions</artifactId>
                <version>${rest-assured-kotlin-extensions.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-contract-wiremock</artifactId>
                <version>${spring-cloud-contract-wiremock.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api-kotlin</artifactId>
                <version>${log4j-api-kotlin.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>io.github.hakky54</groupId>
                <artifactId>logcaptor</artifactId>
                <version>${logcaptor.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.codeborne</groupId>
                <artifactId>selenide</artifactId>
                <version>${selenide.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-remote-driver</artifactId>
                <version>${selenium-remote-driver.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-kotlin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
        </dependency>
    </dependencies>
    <build>
        <defaultGoal>package</defaultGoal>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>${asciidoctor-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>generate HTML5 REST API documentation</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>process-asciidoc</goal>
                            </goals>
                            <configuration>
                                <backend>html5</backend>
                            </configuration>
                        </execution>
                        <execution>
                            <id>generate PDF document</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>process-asciidoc</goal>
                            </goals>
                            <configuration>
                                <backend>pdf</backend>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <sourceDirectory>${project.basedir}/src/main/docs</sourceDirectory>
                        <outputDirectory>${asciidoctor.outputs}</outputDirectory>
                        <doctype>docbook</doctype>
                        <sourceDocumentName>index.adoc</sourceDocumentName>
                        <attributes>
                            <project-version>${project.version}</project-version>
                            <project-group-id>${project.groupId}</project-group-id>
                            <project-artifact-id>${project.artifactId}</project-artifact-id>
                            <source-highlighter>rouge</source-highlighter>
                            <snippets>${project.build.directory}/generated-snippets</snippets>
                            <attribute-undefined>drop-line</attribute-undefined>
                            <attribute-missing>warn</attribute-missing>
                            <sectanchors>true</sectanchors>
                            <idseparator>-</idseparator>
                            <icons>font</icons>
                            <allow-uri-read/>
                            <toc>false</toc>
                            <data-uri/>
                            <idprefix/>
                            <pagenums/>
                        </attributes>
                        <requires>
                            <require>asciidoctor-diagram</require>
                        </requires>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.springframework.restdocs</groupId>
                            <artifactId>spring-restdocs-asciidoctor</artifactId>
                            <version>${spring-restdocs-asciidoctor.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj-pdf</artifactId>
                            <version>${asciidoctorj-pdf.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.asciidoctor</groupId>
                            <artifactId>asciidoctorj-diagram</artifactId>
                            <version>${asciidoctorj-diagram.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.jruby</groupId>
                            <artifactId>jruby-complete</artifactId>
                            <version>${jruby-complete.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!---->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
                <!---->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions-maven-plugin.version}</version>
                    <configuration><!--suppress UnresolvedMavenProperty -->
                        <rulesUri>file:///${maven.multiModuleProjectDirectory}/.mvn/versions.xml</rulesUri>
                    </configuration>
                </plugin>
                <!---->
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-maven-plugin.version}</version>
                    <configuration>
                        <follow>false</follow>
                        <verbose>true</verbose>
                        <useColor>true</useColor>
                        <logDate>default</logDate>
                        <autoPull>always</autoPull>
                        <keepRunning>false</keepRunning>
                        <watchInterval>500</watchInterval>
                        <allContainers>true</allContainers>
                        <removeVolumes>true</removeVolumes>
                        <autoCreateCustomNetworks>false</autoCreateCustomNetworks>
                    </configuration>
                    <!-- <executions>
                        <execution>
                            <id>run docker:build goal on maven install phase</id>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions> -->
                </plugin>
                <plugin>
                    <groupId>com.dkanejs.maven.plugins</groupId>
                    <artifactId>docker-compose-maven-plugin</artifactId>
                    <version>${docker-compose-maven-plugin.version}</version>
                    <configuration>
                        <skip>true</skip>
                        <build>true</build>
                        <detail>true</detail>
                        <verbose>false</verbose>
                        <projectName>dev</projectName>
                        <detachedMode>true</detachedMode>
                        <removeOrphans>true</removeOrphans>
                        <removeVolumes>true</removeVolumes>
                        <removeImages>true</removeImages>
                        <removeImagesType>local</removeImagesType>
                        <ignorePullFailures>true</ignorePullFailures>
                        <!--<host>unix:///var/run/docker.sock</host>-->
                        <envVars>
                            <baseImage>adoptopenjdk/openjdk8:x86_64-alpine-jdk8u292-b10-slim</baseImage>
                            <imageTag>${project.version}</imageTag>
                        </envVars>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <args>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>spring</plugin>
                        <plugin>jpa</plugin>
                    </compilerPlugins>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>!e2e</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <groups>!e2e</groups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>e2e</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <groups>e2e</groups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>include-docs</id>
            <properties>
                <asciidoctor.outputs>${project.build.outputDirectory}/static/docs</asciidoctor.outputs>
            </properties>
        </profile>
    </profiles>
</project>
